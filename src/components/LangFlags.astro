---
import { Image } from 'astro:assets'
import { getLocalizedPathname } from '@/i18n/config'
import type { ImageMetadata } from 'astro'
import type { HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'a'> {
  language: string
  imagePath: string
  altText: string
  isActive: boolean
}

const { imagePath, altText } = Astro.props
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/flags/*.{jpeg,jpg,png,gif}')
if (!images[imagePath])
  throw new Error(`"${imagePath}" does not exist in glob: "src/assets/flags/*.{jpeg,jpg,png,gif}"`)

const {
  language,
  class: className,
  ...props
  // biome-ignore lint/suspicious/noExplicitAny: <explanation>
} = Astro.props as unknown as { language: string; class: string; [key: string]: any }
const { pathname } = Astro.url

const lang = Astro.params?.lang || 'uk'
const isActive = language === lang

const href = getLocalizedPathname(pathname, language as 'uk' | 'en' | 'ru')
---


<a
  href={href}
  lang={language}
  class:list={[className, { active: isActive }]}
  {...props}
>
  <Image src={images[imagePath]()} alt={altText} />
</a>
<style>
  a {
    display: inline-block;
    text-decoration: none;
  }
  a.active {
    font-weight: bolder;
    text-decoration: underline;
  }
</style>
